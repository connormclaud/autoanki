[project]
name = "autoanki"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.10.10",
    "prometheus-client>=0.21.0",
    "typer>=0.12.5",
]

[tool.uv]
dev-dependencies = [
    "debugpy>=1.8.7",
    "jedi-language-server>=0.41.4",
    "mypy>=1.12.0",
    "pre-commit>=4.0.1",
    "pyright>=1.1.385",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.3",
    "ruff>=0.7.0",
]

[tool.pytest.ini_options]
addopts = [
  "--cov",
  "--cov-report=term-missing",
  "--cov-report=xml:coverage.xml",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
relative_files = true
omit = [
    'tests/*',
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203",  # Ignore `one-blank-line-before-class` to prevent conflicts with D211
  "D213",  # Ignore `multi-line-summary-second-line` to prevent conflict with D212
  "COM812",  # Disable as it may cause conflicts with formatters
  "ISC001",  # Disable as it may cause conflicts with formatters
  "I001",  # Conflicts with how ruff sort imports

]


[tool.ruff.lint.per-file-ignores]
"test_transcribe.py" = ["RUF001"] # IPA 
"test_*.py" = [
  "S101", # asserts allowed in tests...
  "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  "PLR2004", # Magic value used in comparison, 
]
"conftest.py" = ["INP001",]
